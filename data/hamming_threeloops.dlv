#maxint=1000.

% sail hamming numbers

% { 2^k | k = 0,1,2,... } 
% h2(startNode,2,endNode)

h2(1,2,2).
h2(X,2,Y) :- h2(_,2,X), Y = 2*X.


% { 2^j * 3^k | j,k = 0,1,2,... } start from nodes generated by h2
% h23(startNode,3,endNode)

h23(1,3,3).
h23(X,3,Y)  :- h2(_,2,X), Y = 3*X.
h23(X,3,Y)  :- h23(_,3,X), Y = 3*X.


% { 2^i * 3^j * 5^k | i,j,k = 0,1,2,... } start from nodes generated by h2 and h23
% h235(startNode,5,endNode)

h235(1,5,5).
h235(X,5,Y) :- h2(_,2,X), Y = 5*X.
h235(X,5,Y) :- h23(_,3,X), Y = 5*X.
h235(X,5,Y) :- h235(_,5,X), Y = 5*X.


% Output relation
% sail(startNode,label,endNode)

sail(X,L,Y) :- h2(X,L,Y).
sail(X,L,Y) :- h23(X,L,Y).
sail(X,L,Y) :- h235(X,L,Y).


% Count total numbers

sail_edges(N) :- #count{X,L,Y : sail(X,L,Y)} = N.
h2_edges(N) :- #count{X,L,Y : h2(X,L,Y)} = N.
h23_edges(N) :- #count{X,L,Y : h23(X,L,Y)} = N.
h235_edges(N) :- #count{X,L,Y : h235(X,L,Y)} = N.



% fish hamming numbers
% fish(startNode,label,endNode)

fish(1,2,2).
fish(1,3,3).
fish(1,5,5).

fish(X,2,Y) :- fish(_,_,X), Y = 2*X.
fish(X,3,Y) :- fish(_,_,X), Y = 3*X.
fish(X,5,Y) :- fish(_,_,X), Y = 5*X.


% Count total numbers

fish_edges(N) :- #count{X,L,Y : fish(X,L,Y)} = N.




% This is the RPQ engine 

% conc(2,3,"2.3").
sail(X,L_conc_M,Y) :- conc(L,M, L_conc_M), sail(X,L,Z), sail(Z,M,Y).
fish(X,L_conc_M,Y) :- conc(L,M, L_conc_M), fish(X,L,Z), fish(Z,M,Y).

% or(2,3,"2|3").
sail(X,L_or_M,Y) :- or(L,_, L_or_M), sail(X,L,Y).
sail(X,L_or_M,Y) :- or(_,M, L_or_M), sail(X,M,Y).

% plus(2,"2+").
sail(X,L_plus,Y) :- plus(L, L_plus), sail(X,L,Y).
sail(X,L_plus,Y) :- plus(L, L_plus), sail(X,L,Z), sail(Z,L_plus,Y).

% star(2,"2*").
sail(X,L_star,X) :- star(L, L_star), sail(X,L,X).
sail(X,L_star,Y) :- star(L, L_star), sail(X,L,Z), sail(Z,L_star,Y).
